#include <stdio.h>
#include <stdlib.h>
#include "db_singleton.h"

EXEC SQL INCLUDE sqlca;
EXEC SQL BEGIN DECLARE SECTION;
int id_parque;
int id_ubicacion;
char nombre[51];
int capacidad_maxima_diaria;
EXEC SQL END DECLARE SECTION;

EXEC SQL WHENEVER SQLERROR SQLPRINT;
EXEC SQL WHENEVER SQLWARNING SQLPRINT;

int main()
{
    // Llama al singleton para obtener la conexión activa
    DBSingleton* db = getInstance();
    if (!db || !db->conectado) {
        printf("No se pudo conectar a la base de datos.\n");
        return 1;
    }

    EXEC SQL DECLARE cursor_parque CURSOR FOR
        SELECT id_parque, id_ubicacion, nombre, capacidad_maxima_diaria FROM parques;

    EXEC SQL OPEN cursor_parque;

    while (1)
    {
        EXEC SQL FETCH cursor_parque INTO :id_parque, :id_ubicacion, :nombre, :capacidad_maxima_diaria;

        if (sqlca.sqlcode != 0)
        {
            if (sqlca.sqlcode == 100)
            {
                break; // Fin del cursor
            }
            else
            {
                printf("Error al obtener datos: %d\n", sqlca.sqlcode);
                cerrar_conexion(); // Cierra conexión antes de salir
                exit(1);
            }
        }
        
        
        mostrarMenu();
        int opcion;
        scanf("%d", &opcion);
        switch (opcion) {
            case 1:
                printf("Venta de entradas para el parque %s (ID: %d)\n", nombre, id_parque);
                // Aquí iría la lógica para la venta de entradas
                break;
            case 2:
                printf("Validar Entrada para el parque %s (ID: %d)\n", nombre, id_parque);
                // Aquí iría la lógica para validar entradas
                break;
            case 3:
                printf("Total Recaudado Mes o Año para el parque %s (ID: %d)\n", nombre, id_parque);
                // Aquí iría la lógica para calcular el total recaudado
                break;
            case 0:
                printf("Saliendo del programa...\n");
                cerrar_conexion(); // Cierra conexión antes de salir
                return 0;
            default:
                printf("Opción no válida. Intente nuevamente.\n");
        }

    }

    EXEC SQL CLOSE cursor_parque;

    cerrar_conexion(); // Desconectar y limpiar al final
    return 0;
}

void mostrarMenu()
{
    printf("Seleccione una opción: \n");
    printf("1. Venta de entradas\n");
    printf("2. Validar Entrada\n");
    printf("3. Total Recaudado Mes o Año \n");
    printf("0. Salir\n");
}
